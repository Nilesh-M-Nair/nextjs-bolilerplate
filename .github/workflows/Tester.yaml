name: Test

on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch:

jobs:
  configurations:
    runs-on: ubuntu-latest
    outputs:
      ChildAppsList: ${{ steps.getConfigs.outputs.ChildAppsList }}
    steps:
      - uses: actions/github-script@v6
        id: getConfigs
        with:
          script: |
            const appListMatrix = {
              include: [
                {
                  appName: 'nextjs-app-1',
                  repoName: 'nextjs-app-1',
                  repoLink: 'github.com/Nilesh-M-Nair/nextjs-app-1.git'
                }
              ]
            };
            core.setOutput('ChildAppsList', JSON.stringify(appListMatrix));
  update-child-apps:
    runs-on: ubuntu-latest
    needs: configurations
    strategy:
      matrix: ${{ fromJson(needs.configurations.outputs.ChildAppsList) }}
    steps:
      # Set Git author identity
      - name: Set Git author identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Clone Boilerplate Repo
        run: |
          git clone --branch main https://${{ secrets.GH_PAT }}@github.com/Nilesh-M-Nair/nextjs-bolilerplate.git ../boilerplate

      - name: Clone Child Repo
        run: |
          git clone https://${{ secrets.GH_PAT }}@${{ matrix.repoLink }} ../${{ matrix.repoName }}

      - name: Sync Changes
        run: |
          rsync -av --exclude='.git' ../boilerplate/ ../${{ matrix.repoName }}

      - name: Ensure Branch Exists and Commit Changes
        working-directory: ../${{ matrix.repoName }}
        run: |
          # Stash both tracked and untracked changes
          git stash push --include-untracked || true
      
          # Check if the branch exists remotely
          if git ls-remote --exit-code origin feature/updates-from-boilerplate; then
            git fetch origin feature/updates-from-boilerplate
            git checkout feature/updates-from-boilerplate
            git stash pop || true # Apply stashed changes back
          else
            git checkout -b feature/updates-from-boilerplate
          fi
      
          # Add changes, commit, and push
          git add .
          git commit -m "Sync changes from boilerplate" || echo "No changes to commit."
          git pull --rebase origin feature/updates-from-boilerplate || true
          git push --set-upstream origin feature/updates-from-boilerplate
        
        

      - name: Create or Update PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GH_PAT }}
          script: |
            const pr = await github.rest.pulls.create({
              owner: 'Nilesh-M-Nair',
              repo: '${{ matrix.repoName }}',
              title: 'Automated PR for boilerplate updates',
              head: 'feature/updates-from-boilerplate',
              base: 'development',
              body: 'This PR merges boilerplate updates into development.',
            });
            console.log(`Created PR: ${pr.data.html_url}`);

      - name: Merge PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GH_PAT }}
          script: |
            const pr = await github.rest.pulls.list({
              owner: 'Nilesh-M-Nair',
              repo: '${{ matrix.repoName }}',
              head: 'Nilesh-M-Nair:feature/updates-from-boilerplate',
              base: 'development',
            });
            if (pr.data.length > 0) {
              await github.rest.pulls.merge({
                owner: 'Nilesh-M-Nair',
                repo: '${{ matrix.repoName }}',
                pull_number: pr.data[0].number,
                merge_method: 'squash',
              });
              console.log('PR merged successfully.');
            } else {
              console.log('No PR to merge.');
            }
